apiVersion: tekton.dev/v1alpha1
kind: StepAction
metadata:
  name: get-cache
spec:
  params:
    - name: path
      type: string
    - name: key
      type: string
    - name: digest
      type: string
      # We can't have optional params. :(
      default: "-"
  image: cgr.dev/chainguard/curl:latest-dev
  env:
    - name: CACHE_KEY
      value: $(params.key)
    - name: CACHE_FILE_PATH
      value: $(params.path)
    - name: EXPECTED_DIGEST
      value: $(params.digest)
  workingDir: /tekton/home
  script: |
    # Test for cache hit
    curl --fail-with-body "http://cache-service.tekton-pipelines.svc.cluster.local:8080/${CACHE_KEY}" || exit 0
    if [ $? -ne 0 ]; then
      echo "Cache miss"
      exit 0
    fi

    # Fetch content
    TMPFILE="$(mktemp -d)/file"
    curl "http://cache-service.tekton-pipelines.svc.cluster.local:8080/${CACHE_KEY}/blob" > "${TMPFILE}"
    GOT_DIGEST=$(sha256sum "${TMPFILE}" | cut -f1 -d' ')
    if [ "${EXPECTED_DIGEST}" != "-" ]; then
      if [ "${GOT_DIGEST}" != "${EXPECTED_DIGEST}" ]; then
        echo "Expected digest ${EXPECTED_DIGEST} but got ${GOT_DIGEST}"
        exit 1
      fi
    fi
    echo "${GOT_DIGEST}"

    # Extract content
    TYPE=$(curl "http://cache-service.tekton-pipelines.svc.cluster.local:8080/${CACHE_KEY}")
    if [[ "${TYPE}" == *"error reading file"* ]]; then
      exit 1
    # Hack until jq is in image
    elif [[ "${TYPE}" == *"application/tar+gzip"* ]]; then
      tar -xzf "${TMPFILE}" -C ${CACHE_FILE_PATH}
    else 
      mv "${TMPFILE}" "${CACHE_FILE_PATH}"
    fi
